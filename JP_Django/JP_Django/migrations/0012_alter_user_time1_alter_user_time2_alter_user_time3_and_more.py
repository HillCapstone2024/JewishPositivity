# Generated by Django 4.2 on 2024-04-15 22:51

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('JP_Django', '0011_alter_checkin_content_type_alter_user_time1_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='user',
            name='time1',
            field=models.DateTimeField(default=datetime.datetime(2024, 4, 15, 8, 0)),
        ),
        migrations.AlterField(
            model_name='user',
            name='time2',
            field=models.DateTimeField(default=datetime.datetime(2024, 4, 15, 15, 0)),
        ),
        migrations.AlterField(
            model_name='user',
            name='time3',
            field=models.DateTimeField(default=datetime.datetime(2024, 4, 15, 21, 0)),
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('community_id', models.AutoField(primary_key=True, serialize=False)),
                ('community_name', models.CharField(max_length=100, unique=True)),
                ('community_photo', models.BinaryField(blank=True, null=True)),
                ('community_description', models.TextField()),
                ('privacy', models.CharField(max_length=100)),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommunityUser',
            fields=[
                ('communityuser_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('community_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='JP_Django.community')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user_id', 'community_id')},
            },
        ),
    ]
